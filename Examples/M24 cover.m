A2<u,v>:=AffineSpace(RationalsAsNumberField(),2);
R<u,v>:=PolynomialRing(RationalsAsNumberField(),2);
//X:=Curve(ProjectiveSpace(PolynomialRing(Rationals(),2)));
X:=Curve(A2,u^2+v^2+1);
KX<u,v>:=FunctionField(X);
SetDebugOnError(true);

phi:=KX!-1737277035859647386692841945492390555113878590124237951214813184*u^12 -
    28130851481302304540675167296154442353245836595640386535292928000*u^11*v +
    19053726173790506403178800403395359401739609918802079067192426496*u^11 -
    117379080473176656391320886480773839517707214133169326096436428800*u^10*v^2 +
    82171243412441642910726283401626612356214912357626352267213930496*u^10*v -
    16837836635991352888444001497272296558209969915309881959393525760*u^10 -
    28130851481302304540675167296154442353245836595640386535292928000*u^9*v^3 -
    607301878436113293341732631476417002294485771699558865283579904000*u^9*v^2 +
    657342737757402165599498710459921831849313652950390365301983150080*u^9*v -
    169540493975308791620474594645534003750141034293252326336240812032*u^9 -
    415759611661099719696764944286405491025634458085964993521097113600*u^8*v^3 -
    757241942039911106008986434484732582728713878638989924472935415808*u^8*v^2 +
    1077643854178343522975361036699171902099525303982177129696338116608*u^8*v -
    280627671369591918057423775726202849167359182633714019288687853568*u^8 -
    1561992535041024542632617793349043700938527303766254044413453926400*u^7*v^3 +
    349680643599689369174753437558592600709747394053080142358609133568*u^7*v^2 +
    1088230575702637532572510411505171794642051125637910203098084409344*u^7*v -
    473175431648253111606137936742800723328106210195549481447593148416*u^7 -
    3018102886710978064837121860837075951496109731972596871127967465472*u^6*v^3 +
    2520974850103270622644539033202924434440617267677685818770671878144*u^6*v^2 +
    88953930421984938353503112142970296303003963241351212451206201344*u^6*v -
    251134016481639104293752786425295097111658758153861709740262764544*u^6 -
    3762202583462646552065660544309901457339648155500952687846225084416*u^5*v^3 +
    4652287647642616341105089267553105744148508301006621080061098459136*u^5*v^2 -
    1398535807012682997218194896761635901897363216131262571927978403840*u^5*v -
    70147936666913290626175641221313447446348836438574980994004141056*u^5 -
    3309696310484278614453567006756682691002378911730618018335621709824*u^4*v^3 +
    5142989328175912096204254749725252584667678871945608040736752742400*u^4*v^2 -
    2256868690955302264117957839241611729625518493232336362851799017472*u^4*v +
    285759761392917098009532171846382883107725586954266329422016543248*u^4 -
    2101308373540507570028172026576364437577620872025423347036794175488*u^3*v^3 +
    3883825901581540529125752955525776257736038775971552611005865116672*u^3*v^2 -
    2249332098656696310647163096366499633784926981954586757430968363008*u^3*v +
    365424892761373232855223748726785025818056778358377395317049370816*u^3 -
    950449819649447469133260897307513441325575251925355560742651584512*u^2*v^3 +
    2035013118127431247109662461074612442746004359316331501275325840640*u^2*v^2 -
    1379559076031810116065005702128663204499882377870872598984582049952*u^2*v +
    292981920085655298946056343484207661594382568366420477919257032700*u^2 -
    286801071217436312043421434321994610130647716754161254104821730304*u*v^3 +
    693031350566526821372648435572540737121995447860226865105499096448*u*v^2 -
    568311358516081030113680199580185140740532313416891476297822042400*u*v +
    157372498610066596463099558370041905398696343262149604415025543800*u -
    48152982885248200200230172081938934996396377914545498429498281984*v^3 +
    130050864955886337380910458047256351072568356852913388826007859600*v^2 -
    113732734047387932489459237185713793335155614017164681574162762700*v +
    3505740727937780307022160036602841514877131258415508834106945984875/108;

    #Support(Divisor(Differential(phi)));

    effort:=2;
    Kinit:=BaseRing(BaseRing(Parent(phi)));

    degree:=8;
    RsandPs := Support(Divisor(phi));
    RsandQs := Support(Divisor(phi-1));
    PsQsRs := SetToSequence(SequenceToSet(RsandPs cat RsandQs));

    xs := SmallFunctions(PsQsRs, degree);
    ts_xs_Fs_sorted := SortSmallFunctions(phi, xs : effort := effort);
